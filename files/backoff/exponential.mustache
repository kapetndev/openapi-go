{{>partial_header}}
package backoff

import "time"

// Exponential is an implementation of a backoff strategy applying an
// exponential function.
type Exponential struct {
	BaseDelay  time.Duration
	Multiplier float64
	Jitter     float64
	MaxDelay   time.Duration
}

// Backoff returns the duration to wait.
func (b Exponential) Backoff(idx int) time.Duration {
	if idx == 0 {
		return b.BaseDelay
	}

	backoff, max := float64(b.BaseDelay), float64(b.MaxDelay)
	for backoff < max && idx > 0 {
		backoff *= b.Multiplier
		idx--
	}

	if backoff > max {
		backoff = max
	}

	backoff = addJitter(backoff, b.Jitter)
	return time.Duration(backoff)
}
